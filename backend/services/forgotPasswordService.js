const db = require('../models/db');
const nodemailer = require('nodemailer');
const crypto = require('crypto');

// Nodemailer SMTP konfigur√°ci√≥ a Mailgun haszn√°lat√°val
const transporter = nodemailer.createTransport({
  host: 'smtp.eu.mailgun.org',
  port: 587,
  auth: {
    user: 'postmaster@cleandc.hu',
    pass: 'd045d2264a5eed6a5a7a2432c39430e5-1654a412-fbec0050'
  }
});

exports.sendResetEmail = async (email) => {
  return new Promise((resolve, reject) => {
    db.query('SELECT * FROM users WHERE email = ?', [email], (err, results) => {
      if (err) {
        return reject(new Error('Hiba az adatb√°zis lek√©rdez√©s sor√°n.'));
      }
      if (results.length === 0) {
        return reject(new Error('Ez az email nincs regisztr√°lva.'));
      }

      const token = crypto.randomBytes(20).toString('hex');
      const resetPasswordExpires = Date.now() + 3600000; // 1 √≥ra

      db.query('UPDATE users SET resetPasswordToken = ?, resetPasswordExpires = ? WHERE email = ?', [token, resetPasswordExpires, email], (err) => {
        if (err) {
          return reject(new Error('Hiba a token ment√©se sor√°n.'));
        }

        const mailOptions = {
          from: 'Pollak PasswordReset <postmaster@cleandc.hu>',
          to: email,
          subject: 'PollakPizza Jelsz√≥ Vissza√°ll√≠t√°s',
          text: `√ñn ezt az emailt az√©rt kapta, mert valaki (vagy √ñn) jelsz√≥ vissza√°ll√≠t√°st k√©rt a fi√≥kj√°hoz.\n\n
          K√©rj√ºk kattintson az al√°bbi linkre, vagy m√°solja be a b√∂ng√©sz≈ëj√©be a jelsz√≥ vissza√°ll√≠t√°s√°hoz:\n\n
          http://localhost:8200/reset-password/${token}\n\n
          Ha nem √ñn k√©rte a jelsz√≥ vissza√°ll√≠t√°st, k√©rj√ºk hagyja figyelmen k√≠v√ºl ezt az emailt, √©s a jelszava v√°ltozatlan marad.\n`
        };

        transporter.sendMail(mailOptions, (err, info) => {
          if (err) {
            console.error('Mailgun SMTP hiba:', err); // üî• Itt l√°tod majd a pontos hib√°t!
            return reject(new Error('Hiba az email k√ºld√©se sor√°n.'));
          }
          resolve(info);
        });
      });
    });
  });
};